{"version":3,"sources":["Components/Statistics/Statistics.module.css","Components/Feedback/Feedback.module.css","Components/Section/Section.module.css","Components/Statistics/Statistics.js","Components/Feedback/FeedbackOptions.js","Components/Section/Section.js","Components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","Statistics","good","bad","neutral","total","positivePercentage","className","s","list","style","backgroundColor","FeedbackOptions","options","onLeaveFeedback","map","option","onClick","name","uuidv4","Section","title","children","section","Notification","message","App","useState","setGood","setNeutral","setBad","countTotalFeedback","e","target","prevGood","prevNeutral","prevBad","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8IACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,KAAO,2B,gBCAzDD,EAAOC,QAAU,CAAC,KAAO,yB,gBCAzBD,EAAOC,QAAU,CAAC,QAAU,2B,4IC6BbC,EA3BI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,IAAKC,EAAyC,EAAzCA,QAASC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,8BACE,qBACEC,UAAWC,IAAEC,KACbC,MAAO,CACLC,gBAAiBL,GAAsB,GAAK,QAAU,OAH1D,UAME,wCAAWJ,KACX,2CAAcE,KACd,uCAAUD,KACV,yCAAYE,EAAZ,OACA,qDAAwBC,EAAxB,a,wBCSOM,EArBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,mCACE,oBAAIP,UAAWC,IAAEC,KAAjB,SACGI,EAAQE,KAAI,SAAAC,GAAM,OACjB,6BACE,wBAAQC,QAASH,EAAiBI,KAAMF,EAAxC,SACGA,KAFIG,uB,gBCQJC,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,0BAASf,UAAWC,IAAEe,QAAtB,UACE,6BAAKF,IACJC,MCCQE,EALM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,mCACE,4BAAIA,OCCO,SAASC,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOzB,EAAP,KAAa0B,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOvB,EAAP,KAAgByB,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOxB,EAAP,KAAY2B,EAAZ,KAmBMC,EAAqB,kBAAM7B,EAAOE,EAAUD,GAKlD,OACE,gCACE,cAAC,EAAD,CAASkB,MAAM,wBAAf,SACE,cAAC,EAAD,CACER,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBA3BgB,SAAAkB,GAEtB,OADaA,EAAEC,OAAOf,MAEpB,IAAK,OACHU,GAAQ,SAAAM,GAAQ,OAAIA,EAAW,KAC/B,MACF,IAAK,UACHL,GAAW,SAAAM,GAAW,OAAIA,EAAc,KACxC,MACF,IAAK,MACHL,GAAO,SAAAM,GAAO,OAAIA,EAAU,KAC5B,MACF,QACE,aAiBF,cAAC,EAAD,CAASf,MAAM,aAAf,SACGU,IACC,cAAC,EAAD,CACE7B,KAAMA,EACNE,QAASA,EACTD,IAAKA,EACLE,MAAO0B,IACPzB,mBAjBR+B,KAAKC,MAAO,IAAMpC,EAAQ6B,OAoBpB,cAAC,EAAD,CAAcN,QAAQ,2BC9ChCc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACf,EAAD,MAEFgB,SAASC,eAAe,W","file":"static/js/main.04c89dea.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__VQfJK\",\"show\":\"Statistics_show__1po5B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Feedback_list__Gjsm7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__28R1n\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Statistics.module.css';\r\nconst Statistics = ({ good, bad, neutral, total, positivePercentage }) => {\r\n  return (\r\n    <div>\r\n      <ul\r\n        className={s.list}\r\n        style={{\r\n          backgroundColor: positivePercentage >= 50 ? 'green' : 'red',\r\n        }}\r\n      >\r\n        <li>Good: {good}</li>\r\n        <li>Neutral: {neutral}</li>\r\n        <li>Bad: {bad}</li>\r\n        <li>Total: {total} </li>\r\n        <li>Positive feedback: {positivePercentage}%</li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport s from './Feedback.module.css';\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <>\r\n      <ul className={s.list}>\r\n        {options.map(option => (\r\n          <li key={uuidv4()}>\r\n            <button onClick={onLeaveFeedback} name={option}>\r\n              {option}\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section className={s.section}>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => (\r\n  <>\r\n    <p>{message}</p>\r\n  </>\r\n);\r\nexport default Notification;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n","import { useState } from 'react';\nimport Statistics from './Components/Statistics';\nimport FeedbackOptions from './Components/Feedback';\nimport Section from './Components/Section';\nimport Notification from './Components/Notification';\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const onLeaveFeedback = e => {\n    const name = e.target.name;\n    switch (name) {\n      case 'good':\n        setGood(prevGood => prevGood + 1);\n        break;\n      case 'neutral':\n        setNeutral(prevNeutral => prevNeutral + 1);\n        break;\n      case 'bad':\n        setBad(prevBad => prevBad + 1);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const countTotalFeedback = () => good + neutral + bad;\n\n  const countPositiveFeedbackPercentage = () =>\n    Math.round((100 * good) / countTotalFeedback());\n\n  return (\n    <div>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={['good', 'neutral', 'bad']}\n          onLeaveFeedback={onLeaveFeedback}\n        />\n      </Section>\n      <Section title=\"Statistics\">\n        {countTotalFeedback() ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback()}\n            positivePercentage={countPositiveFeedbackPercentage()}\n          />\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </Section>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}